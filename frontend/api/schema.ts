/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/checkins": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["Checkins_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/checkins/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["Checkins_get"];
        put?: never;
        post?: never;
        delete: operations["Checkins_delete"];
        options?: never;
        head?: never;
        patch: operations["Checkins_patch"];
        trace?: never;
    };
    "/collections": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["Collections_list"];
        put?: never;
        post: operations["Collections_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/collections/{collection_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["Collections_get"];
        put: operations["Collections_put"];
        post?: never;
        delete: operations["Collections_delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/collections/{collection_id}/items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["CollectionItems_list"];
        put?: never;
        post: operations["CollectionItems_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/collections/{collection_id}/items/{collection_item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: operations["CollectionItems_delete"];
        options?: never;
        head?: never;
        patch: operations["CollectionItems_patch"];
        trace?: never;
    };
    "/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["me"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/timelines/public": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["Timelines_public"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{username}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["Users_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{username}/checkins": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["Checkins_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{username}/collections": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["users-collections-list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{username}/stats/checkin/daily": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["Checkin_daily"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{username}/stats/checkin/hourly": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["Checkin_hourly"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{username}/stats/links": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["Stats_links"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{username}/stats/tags": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["Stats_tags"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @description チェックインデータ */
        Checkin: {
            /** Format: int64 */
            id: number;
            /** Format: date-time */
            checked_in_at: string;
            tags: string[];
            /** Format: uri */
            link: string;
            note: string;
            /** @default false */
            is_private: boolean;
            /** @default false */
            is_too_sensitive: boolean;
            /** @default false */
            discard_elapsed_time: boolean;
            /** @enum {string} */
            source: "web" | "csv" | "webhook" | "api";
            user: components["schemas"]["User"];
        };
        /** @description チェックインの概況 */
        CheckinSummary: {
            /**
             * Format: int64
             * @description 最後のチェックインからの経過秒数 (現在のセッション)
             */
            current_session_elapsed: number;
            /**
             * Format: int64
             * @description 合計チェックイン回数
             */
            total_checkins: number;
            /**
             * Format: int64
             * @description 合計時間 (秒)
             */
            total_times: number;
            /**
             * Format: int64
             * @description チェックイン間隔の平均値 (秒)
             */
            average_interval: number;
            /**
             * Format: int64
             * @description チェックイン間隔の中央値 (秒)
             */
            median_interval: number;
            /**
             * Format: int64
             * @description チェックイン間隔の最大値 (秒)
             */
            longest_interval: number;
            /**
             * Format: int64
             * @description チェックイン間隔の最小値 (秒)
             */
            shortest_interval: number;
        };
        /** @description コレクション */
        Collection: {
            /** Format: int64 */
            id: number;
            /** Format: int64 */
            user_id: number;
            user_name: string;
            title: string;
            /** @default false */
            is_private: boolean;
        };
        CollectionItem: {
            /** Format: int64 */
            id: number;
            /** Format: int64 */
            collection_id: number;
            /** Format: uri */
            link: string;
            note: string;
            tags: string[];
        };
        DailyCheckinSummary: {
            /** Format: date */
            date: string;
            /** Format: int32 */
            count: number;
        };
        Error: {
            /** Format: int32 */
            status: number;
            error: {
                message: string;
            };
        };
        HourlyCheckinSummary: {
            /** Format: int32 */
            hour: number;
            /** Format: int32 */
            count: number;
        };
        MostlyUsedCheckinTag: {
            name: string;
            /** Format: int32 */
            count: number;
        };
        MostlyUsedLink: {
            link: string;
            /** Format: int32 */
            count: number;
        };
        /** @description ユーザーデータ */
        User: {
            /** @description ユーザー名 */
            name: string;
            /** @description 名前 */
            display_name: string;
            /** @description チェックイン履歴の非公開フラグ */
            is_protected: boolean;
            /** @description いいね一覧の非公開フラグ */
            private_likes: boolean;
            /** @description 自己紹介文 */
            bio?: string;
            /** @description プロフィール上に掲載するURL */
            url?: string;
            checkin_summary?: components["schemas"]["CheckinSummary"];
        };
        ValidationError: {
            /** Format: int32 */
            status: number;
            error: {
                message: string;
                violations: {
                    message: string;
                    field: string;
                }[];
            };
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    Checkins_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** Format: date-time */
                    checked_in_at?: string;
                    tags?: string[];
                    /** Format: uri */
                    link?: string;
                    note?: string;
                    /** @default false */
                    is_private?: boolean;
                    /** @default false */
                    is_too_sensitive?: boolean;
                    /** @default false */
                    discard_elapsed_time?: boolean;
                };
            };
        };
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Checkin"];
                };
            };
            /** @description Client error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationError"];
                };
            };
            /** @description An unexpected error response. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    Checkins_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Checkin"];
                };
            };
            /** @description An unexpected error response. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    Checkins_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description There is no content to send for this request, but the headers may be useful. */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description An unexpected error response. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    Checkins_patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** Format: date-time */
                    checked_in_at?: string;
                    tags?: string[];
                    /** Format: uri */
                    link?: string;
                    note?: string;
                    is_private?: boolean;
                    is_too_sensitive?: boolean;
                    discard_elapsed_time?: boolean;
                };
            };
        };
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Checkin"];
                };
            };
            /** @description Client error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationError"];
                };
            };
            /** @description An unexpected error response. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    Collections_list: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Collection"][];
                };
            };
        };
    };
    Collections_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    title: string;
                    /** @default false */
                    is_private: boolean;
                };
            };
        };
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Collection"];
                };
            };
            /** @description Client error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationError"];
                };
            };
            /** @description An unexpected error response. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    Collections_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                collection_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Collection"];
                };
            };
            /** @description An unexpected error response. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    Collections_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                collection_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    title: string;
                    /** @default false */
                    is_private: boolean;
                };
            };
        };
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Collection"];
                };
            };
            /** @description Client error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationError"];
                };
            };
            /** @description An unexpected error response. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    Collections_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                collection_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Collection"];
                };
            };
            /** @description An unexpected error response. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    CollectionItems_list: {
        parameters: {
            query?: {
                page?: number;
                per_page?: number;
            };
            header?: never;
            path: {
                collection_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    "x-total-count": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CollectionItem"][];
                };
            };
            /** @description An unexpected error response. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    CollectionItems_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                collection_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** Format: uri */
                    link: string;
                    note?: string;
                    tags?: string[];
                };
            };
        };
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CollectionItem"];
                };
            };
            /** @description Client error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationError"];
                };
            };
            /** @description An unexpected error response. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    CollectionItems_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                collection_id: number;
                collection_item_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description There is no content to send for this request, but the headers may be useful. */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description An unexpected error response. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    CollectionItems_patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                collection_id: number;
                collection_item_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    note?: string;
                    tags?: string[];
                };
            };
        };
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CollectionItem"];
                };
            };
            /** @description Client error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationError"];
                };
            };
            /** @description An unexpected error response. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    me: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
        };
    };
    Timelines_public: {
        parameters: {
            query?: {
                page?: number;
                per_page?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    "x-total-count": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Checkin"][];
                };
            };
        };
    };
    Users_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                username: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
            /** @description An unexpected error response. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    Checkins_list: {
        parameters: {
            query?: {
                page?: number;
                per_page?: number;
                has_link?: boolean;
            };
            header?: never;
            path: {
                username: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    "x-total-count": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Checkin"][];
                };
            };
            /** @description An unexpected error response. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    "users-collections-list": {
        parameters: {
            query?: {
                page?: number;
                per_page?: number;
            };
            header?: never;
            path: {
                username: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    "x-total-count": number;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Collection"][];
                };
            };
            /** @description An unexpected error response. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    Checkin_daily: {
        parameters: {
            query?: {
                since?: string;
                until?: string;
            };
            header?: never;
            path: {
                username: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DailyCheckinSummary"][];
                };
            };
            /** @description An unexpected error response. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    Checkin_hourly: {
        parameters: {
            query?: {
                since?: string;
                until?: string;
            };
            header?: never;
            path: {
                username: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HourlyCheckinSummary"][];
                };
            };
            /** @description An unexpected error response. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    Stats_links: {
        parameters: {
            query?: {
                since?: string;
                until?: string;
            };
            header?: never;
            path: {
                username: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MostlyUsedLink"][];
                };
            };
            /** @description An unexpected error response. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    Stats_tags: {
        parameters: {
            query?: {
                since?: string;
                until?: string;
            };
            header?: never;
            path: {
                username: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MostlyUsedCheckinTag"][];
                };
            };
            /** @description An unexpected error response. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
}
